<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>AtCoder Beginner Contest 263</title>
    <url>/2022/08/06/abc263/</url>
    <content><![CDATA[<h2 id="LINE-Verda-Programming-Contest（AtCoder-Beginner-Contest-263）"><a href="#LINE-Verda-Programming-Contest（AtCoder-Beginner-Contest-263）" class="headerlink" title="LINE Verda Programming Contest（AtCoder Beginner Contest 263）"></a><a href="https://atcoder.jp/contests/abc263">LINE Verda Programming Contest（AtCoder Beginner Contest 263）</a></h2><h3 id="A-Full-House"><a href="#A-Full-House" class="headerlink" title="A - Full House"></a><a href="https://atcoder.jp/contests/abc263/tasks/abc263_a">A - Full House</a></h3><h4 id="题目翻译"><a href="#题目翻译" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入<code>5</code>个数字，问是不是<code>3</code>个相同且另外<code>2</code>个也相同</p>
<h4 id="题目思路"><a href="#题目思路" class="headerlink" title="题目思路"></a>题目思路</h4><p>排序之后判断</p>
<h4 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> a[<span class="hljs-number">10</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">5</span>;i++)&#123;<br>        cin&gt;&gt;a[i];<br>    &#125;<br>    <span class="hljs-built_in">sort</span>(a+<span class="hljs-number">1</span>,a+<span class="hljs-number">6</span>);<br>    <span class="hljs-type">int</span> z=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">1</span>]!=a[<span class="hljs-number">2</span>]) z=<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">2</span>]!=a[<span class="hljs-number">3</span>]&amp;&amp;a[<span class="hljs-number">3</span>]!=a[<span class="hljs-number">4</span>]) z=<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">4</span>]!=a[<span class="hljs-number">5</span>]) z=<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">if</span>(z==<span class="hljs-number">0</span>) cout&lt;&lt;<span class="hljs-string">&quot;Yes&quot;</span>;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="B-Ancestor"><a href="#B-Ancestor" class="headerlink" title="B - Ancestor"></a><a href="https://atcoder.jp/contests/abc263/tasks/abc263_b">B - Ancestor</a></h3><h4 id="题目翻译-1"><a href="#题目翻译-1" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入一个树<code>n</code>个点，点<code>i</code>的父亲节点是$p[i]$，保证$p[i]&lt;i$，<br>点<code>1</code>深度为<code>0</code>，问点<code>n</code>深度是多少？</p>
<h4 id="题目思路-1"><a href="#题目思路-1" class="headerlink" title="题目思路"></a>题目思路</h4><p>从第<code>n</code>个节点往上推即可</p>
<h4 id="AC代码-1"><a href="#AC代码-1" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> a[<span class="hljs-number">60</span>];<br><span class="hljs-type">int</span> f[<span class="hljs-number">60</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>        f[i]=a[i];<br>    &#125;<br>    <span class="hljs-type">int</span> x=n;<br>    <span class="hljs-type">int</span> s=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(;x!=<span class="hljs-number">1</span>;s++)&#123;<br>        x=f[x];<br>    &#125;<br>    cout&lt;&lt;s;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="C-Monotonically-Increasing"><a href="#C-Monotonically-Increasing" class="headerlink" title="C - Monotonically Increasing"></a><a href="https://atcoder.jp/contests/abc263/tasks/abc263_c">C - Monotonically Increasing</a></h3><h4 id="题目翻译-2"><a href="#题目翻译-2" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>从1到<code>m</code>中选<code>n</code>个数字，按字典序输出所有组合。</p>
<h4 id="题目思路-2"><a href="#题目思路-2" class="headerlink" title="题目思路"></a>题目思路</h4><p><code>dfs</code></p>
<h4 id="AC代码-2"><a href="#AC代码-2" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,m;<br><span class="hljs-type">int</span> a[<span class="hljs-number">20</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> l)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(x==n+<span class="hljs-number">1</span>)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            cout&lt;&lt;a[i]&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>;<br>        &#125;<br>        cout&lt;&lt;endl;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=l+<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;<br>        a[x]=i;<br>        <span class="hljs-built_in">solve</span>(x+<span class="hljs-number">1</span>,i);<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-built_in">solve</span>(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="D-Left-Right-Operation"><a href="#D-Left-Right-Operation" class="headerlink" title="D - Left Right Operation"></a><a href="https://atcoder.jp/contests/abc263/tasks/abc263_d">D - Left Right Operation</a></h3><h4 id="题目翻译-3"><a href="#题目翻译-3" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入一个数组，把最左若干个数字改成<code>l</code>，把最右若干个数字改成<code>r</code>(可以不改),问最后数组的和最小是多少？</p>
<h4 id="题目思路-3"><a href="#题目思路-3" class="headerlink" title="题目思路"></a>题目思路</h4><p>求前缀和后dp即可(此题要<code>long long</code>)</p>
<h4 id="AC代码-3"><a href="#AC代码-3" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">200010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> b[<span class="hljs-number">200010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> n,l,r;<br>    cin&gt;&gt;n&gt;&gt;l&gt;&gt;r;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        b[i]=b[i<span class="hljs-number">-1</span>]+a[i<span class="hljs-number">-1</span>];<br>    &#125;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> x[<span class="hljs-number">200010</span>];<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> z=<span class="hljs-number">1e18</span>;<br>    <span class="hljs-built_in">memset</span>(x,<span class="hljs-number">0x7f</span>,<span class="hljs-keyword">sizeof</span> x);<br>    x[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        x[i]=<span class="hljs-built_in">min</span>(x[i<span class="hljs-number">-1</span>],i*l-b[i]);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>,i=<span class="hljs-number">0</span>;j&lt;=n;j++,i++)&#123;<br>        z=<span class="hljs-built_in">min</span>(z,x[j]+(n-j)*r+b[j]);<br>    &#125;<br>    cout&lt;&lt;z;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Atcoder</tag>
      </tags>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 270</title>
    <url>/2022/09/24/abc270/</url>
    <content><![CDATA[<h2 id="TOYOTA-MOTOR-CORPORATION-Programming-Contest-2022-AtCoder-Beginner-Contest-270"><a href="#TOYOTA-MOTOR-CORPORATION-Programming-Contest-2022-AtCoder-Beginner-Contest-270" class="headerlink" title="TOYOTA MOTOR CORPORATION Programming Contest 2022(AtCoder Beginner Contest 270)"></a><a href="https://atcoder.jp/contests/abc270/">TOYOTA MOTOR CORPORATION Programming Contest 2022(AtCoder Beginner Contest 270)</a></h2><h3 id="A-1-2-4-Test"><a href="#A-1-2-4-Test" class="headerlink" title="A - 1-2-4 Test"></a><a href="https://atcoder.jp/contests/abc270/tasks/abc270_a">A - 1-2-4 Test</a></h3><h4 id="题目翻译"><a href="#题目翻译" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入两个数<code>a</code>、<code>b</code>，输出<code>a|b</code></p>
<h4 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">int</span> x,y;<br>	cin&gt;&gt;x&gt;&gt;y;<br>	cout&lt;&lt;(x | y);<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="B-Hammer"><a href="#B-Hammer" class="headerlink" title="B - Hammer"></a><a href="https://atcoder.jp/contests/abc270/tasks/abc270_b">B - Hammer</a></h3><h4 id="题目翻译-1"><a href="#题目翻译-1" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入<code>x</code>、<code>y</code>、<code>z</code>三个数轴上的点，初始在<code>0</code>，目标是<code>x</code>，有一个障碍物<code>y</code>，如果要通过他需要到<code>z</code>处取一个锤子，问<code>0</code>到<code>x</code>的最短路径，无解则输出<code>-1</code></p>
<h4 id="题目思路"><a href="#题目思路" class="headerlink" title="题目思路"></a>题目思路</h4><p>注意<code>x</code>、<code>y</code>、<code>z</code>可能有负数。</p>
<h4 id="AC代码-1"><a href="#AC代码-1" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">int</span> x,y,z;<br>	cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;<br>	<span class="hljs-keyword">if</span>(y&gt;<span class="hljs-number">0</span>&amp;&amp;y&lt;x)&#123;<br>		<span class="hljs-keyword">if</span>(z&gt;y) cout&lt;&lt;<span class="hljs-number">-1</span>;<br>		<span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-built_in">abs</span>(z)+<span class="hljs-built_in">abs</span>(y-z)+<span class="hljs-built_in">abs</span>(y-x);<br>	&#125;<br>	<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(y&lt;<span class="hljs-number">0</span>&amp;&amp;x&lt;y)&#123;<br>		<span class="hljs-keyword">if</span>(z&lt;y) cout&lt;&lt;<span class="hljs-number">-1</span>;<br>		<span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-built_in">abs</span>(z)+<span class="hljs-built_in">abs</span>(y-z)+<span class="hljs-built_in">abs</span>(y-x);<br>	&#125;<br>	<span class="hljs-keyword">else</span>&#123;<br>		cout&lt;&lt;<span class="hljs-built_in">abs</span>(x);<br>	&#125;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="C-Simple-path"><a href="#C-Simple-path" class="headerlink" title="C - Simple path"></a><a href="https://atcoder.jp/contests/abc270/tasks/abc270_c">C - Simple path</a></h3><h4 id="题目翻译-2"><a href="#题目翻译-2" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入一棵树，求<code>x</code>到的最短路径。</p>
<h4 id="题目思路-1"><a href="#题目思路-1" class="headerlink" title="题目思路"></a>题目思路</h4><p>直接进行树上<code>dfs</code>，开一个<code>vector</code>记录路径。</p>
<h4 id="AC代码-2"><a href="#AC代码-2" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br>vector&lt;<span class="hljs-type">int</span>&gt; a[<span class="hljs-number">200010</span>];<br>vector&lt;<span class="hljs-type">int</span>&gt; ans;<br><span class="hljs-type">int</span> s,e,f=<span class="hljs-number">0</span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span>&#123;<br>	<span class="hljs-keyword">if</span>(f==<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span>;<br>	<span class="hljs-keyword">if</span>(x==e)&#123;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;ans.<span class="hljs-built_in">size</span>();i++)&#123;<br>			cout&lt;&lt;ans[i]&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>;<br>		&#125;<br>		f=<span class="hljs-number">1</span>;<br>		<span class="hljs-keyword">return</span>;<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;a[x].<span class="hljs-built_in">size</span>();i++)&#123;<br>		<span class="hljs-keyword">if</span>(a[x][i]!=y)&#123;<br>			ans.<span class="hljs-built_in">push_back</span>(a[x][i]);<br>			<span class="hljs-built_in">dfs</span>(a[x][i],x);<br>			ans.<span class="hljs-built_in">pop_back</span>();<br>		&#125;<br>	&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">int</span> n;<br>	cin&gt;&gt;n&gt;&gt;s&gt;&gt;e;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n<span class="hljs-number">-1</span>;i++)&#123;<br>		<span class="hljs-type">int</span> u,v;<br>		cin&gt;&gt;u&gt;&gt;v;<br>		a[u].<span class="hljs-built_in">push_back</span>(v);<br>		a[v].<span class="hljs-built_in">push_back</span>(u);<br>	&#125;<br>	ans.<span class="hljs-built_in">push_back</span>(s);<br>	<span class="hljs-built_in">dfs</span>(s,<span class="hljs-number">-1</span>);<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="D-Stones"><a href="#D-Stones" class="headerlink" title="D - Stones"></a><a href="https://atcoder.jp/contests/abc270/tasks/abc270_d">D - Stones</a></h3><h4 id="题目翻译-3"><a href="#题目翻译-3" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>初始有<code>k</code>个石子，有<code>k</code>种操作，第<code>i</code>个操作是取走$a_i$个石子，保证$A_1&#x3D;1$，双方轮流操作，希望最大化自己取的石子个数，问先手怎么做最好。</p>
<h4 id="题目思路-2"><a href="#题目思路-2" class="headerlink" title="题目思路"></a>题目思路</h4><p>观察这个数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">18<br>1 5 6 7<br></code></pre></td></tr></table></figure>
<p>最优方案是先手拿<code>6</code>和<code>5</code>，后手拿<code>7</code>和<code>1</code></p>
<p>如果贪心，先手拿<code>7</code>，后手也拿<code>7</code>，先手拿不走剩下的<code>4</code>。</p>
<p>所以我们得出了一个结论，此题需要动态规划。</p>
<p>用$f_i$表示有<code>i</code>石子时先手的最佳分数。</p>
<h4 id="AC代码-3"><a href="#AC代码-3" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> f[<span class="hljs-number">10010</span>];<br><span class="hljs-type">int</span> a[<span class="hljs-number">110</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">int</span> n,k;<br>	cin&gt;&gt;n&gt;&gt;k;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;k;i++)&#123;<br>		cin&gt;&gt;a[i];<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;k;j++)&#123;<br>			<span class="hljs-keyword">if</span>(i&gt;=a[j])&#123;<br>				f[i]=<span class="hljs-built_in">max</span>(f[i],i-f[i-a[j]]);<br>			&#125;<br>		&#125;<br>	&#125;<br>	cout&lt;&lt;f[n]&lt;&lt;endl;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="E-Apple-Baskets-on-Circle"><a href="#E-Apple-Baskets-on-Circle" class="headerlink" title="E - Apple Baskets on Circle"></a><a href="https://atcoder.jp/contests/abc270/tasks/abc270_e">E - Apple Baskets on Circle</a></h3><h4 id="题目翻译-4"><a href="#题目翻译-4" class="headerlink" title="题目翻译"></a>题目翻译</h4><p><code>n</code>个篮子，初始第<code>i</code>个篮子有$a_i$个苹果，<code>1</code>到<code>n</code>无限循环，如果当前的篮子有苹果，就吃掉。，无论有没有苹果，就移动到下一个篮子，问吃掉前<code>k</code>个苹果后，每个篮子有多少个苹果</p>
<h4 id="题目思路-3"><a href="#题目思路-3" class="headerlink" title="题目思路"></a>题目思路</h4><p>直接排序后分几步模拟。</p>
<h4 id="AC代码-4"><a href="#AC代码-4" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">100010</span>];<br>pair&lt;<span class="hljs-type">long</span> <span class="hljs-type">long</span>,<span class="hljs-type">int</span>&gt; b[<span class="hljs-number">100010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">int</span> n;<br>	<span class="hljs-type">long</span> <span class="hljs-type">long</span> k;<br>	cin&gt;&gt;n&gt;&gt;k;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		cin&gt;&gt;a[i];<br>		b[i].first=a[i];<br>		b[i].second=i;<br>	&#125;<br>	<span class="hljs-built_in">sort</span>(b,b+n);<br>	<span class="hljs-type">int</span> bi=<span class="hljs-number">-1</span>;<br>	<span class="hljs-type">long</span> <span class="hljs-type">long</span> l=<span class="hljs-number">0</span>;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<span class="hljs-built_in">i</span>&lt;n;i++)&#123;<br>		<span class="hljs-keyword">if</span>(k&gt;(b[i].first-l)*(n-i))&#123;<br>			k-=(b[i].first-l)*(n-i);<br>		&#125;<br>		<span class="hljs-keyword">else</span>&#123;<br>			bi=i;<br>			<span class="hljs-keyword">break</span>;<br>		&#125;<br>		l=b[i].first;<br>	&#125;<br>	<span class="hljs-type">int</span> d=n-bi;<br>	l+=k/d;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		a[i]=<span class="hljs-built_in">max</span>(a[i]-l,<span class="hljs-number">0LL</span>);<br>	&#125;<br>	k%=d;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		<span class="hljs-keyword">if</span>(a[i]&gt;<span class="hljs-number">0</span>&amp;&amp;k&gt;<span class="hljs-number">0</span>)&#123;<br>			a[i]--;<br>			k--;<br>		&#125;<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		cout&lt;&lt;a[i]&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>;<br>	&#125;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="F-Transportation"><a href="#F-Transportation" class="headerlink" title="F - Transportation"></a><a href="https://atcoder.jp/contests/abc270/tasks/abc270_f">F - Transportation</a></h3><h4 id="题目翻译-5"><a href="#题目翻译-5" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>有<code>n</code>个点，<code>m</code>条边，要让他们连通，除了直接连边外，可以在第<code>i</code>个点花$x_i$的代价修港口，所有有港口的点认为是连通的，还可以在第<code>i</code>个点花$y_i$的代价修机场，所有有机场的点认为是连通的，问最小代价。</p>
<h4 id="题目思路-4"><a href="#题目思路-4" class="headerlink" title="题目思路"></a>题目思路</h4><p>进行四次最小生成树(<code>mst</code>)<br>不建机场或港口进行一次，只建机场进行一次，只建港口进行一次，两个都建进行一次。</p>
<h4 id="AC代码-5"><a href="#AC代码-5" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> f[<span class="hljs-number">200010</span>];<br><span class="hljs-type">int</span> x[<span class="hljs-number">200010</span>];<br><span class="hljs-type">int</span> y[<span class="hljs-number">200010</span>];<br><span class="hljs-type">int</span> n,m,l;<br>vector&lt;pair&lt;<span class="hljs-type">int</span>,pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; &gt; &gt; a;<br>vector&lt;pair&lt;<span class="hljs-type">int</span>,pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; &gt; &gt; e;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">F</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span>&#123;<br>	<span class="hljs-keyword">if</span>(f[x]==x)&#123;<br>		<span class="hljs-keyword">return</span> x;<br>	&#125;<br>	f[x]=<span class="hljs-built_in">F</span>(f[x]);<br>	<span class="hljs-keyword">return</span> f[x];<br>&#125;<br><span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title">mst</span><span class="hljs-params">(<span class="hljs-type">int</span> c)</span></span>&#123;<br>	<span class="hljs-built_in">sort</span>(e.<span class="hljs-built_in">begin</span>(),e.<span class="hljs-built_in">end</span>());<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n+<span class="hljs-number">2</span>;i++)&#123;<br>		f[i]=i;<br>	&#125;<br>	<span class="hljs-type">long</span> <span class="hljs-type">long</span> ans=<span class="hljs-number">0</span>;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;e.<span class="hljs-built_in">size</span>();i++)&#123;<br>		<span class="hljs-type">int</span> x=<span class="hljs-built_in">F</span>(e[i].second.first);<br>		<span class="hljs-type">int</span> y=<span class="hljs-built_in">F</span>(e[i].second.second);<br>		<span class="hljs-keyword">if</span>(x!=y)&#123;<br>			f[x]=y;<br>			c--;<br>			ans+=e[i].first;<br>		&#125;<br>	&#125;<br>	<span class="hljs-keyword">if</span>(c&gt;<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">1e18</span>;<br>	<span class="hljs-keyword">return</span> ans;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;x[i]);<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;y[i]);<br>	&#125;<br>	a.<span class="hljs-built_in">resize</span>(m);<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;m;i++)&#123;<br>		<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d&quot;</span>,&amp;a[i].second.first,&amp;a[i].second.second,&amp;a[i].first);<br>	&#125;<br>	<span class="hljs-type">long</span> <span class="hljs-type">long</span> ans=<span class="hljs-number">1e18</span>;<br>	e=a;<br>	ans=<span class="hljs-built_in">min</span>(ans,<span class="hljs-built_in">mst</span>(n));<br><br>	e=a;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		e.<span class="hljs-built_in">push_back</span>(<span class="hljs-built_in">make_pair</span>(x[i],<span class="hljs-built_in">make_pair</span>(i,n+<span class="hljs-number">1</span>)));<br>	&#125;<br>	ans=<span class="hljs-built_in">min</span>(ans,<span class="hljs-built_in">mst</span>(n+<span class="hljs-number">1</span>));<br><br>	e=a;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		e.<span class="hljs-built_in">push_back</span>(<span class="hljs-built_in">make_pair</span>(y[i],<span class="hljs-built_in">make_pair</span>(i,n+<span class="hljs-number">1</span>)));<br>	&#125;<br>	ans=<span class="hljs-built_in">min</span>(ans,<span class="hljs-built_in">mst</span>(n+<span class="hljs-number">1</span>));<br><br>	e=a;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		e.<span class="hljs-built_in">push_back</span>(<span class="hljs-built_in">make_pair</span>(x[i],<span class="hljs-built_in">make_pair</span>(i,n+<span class="hljs-number">1</span>)));<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		e.<span class="hljs-built_in">push_back</span>(<span class="hljs-built_in">make_pair</span>(y[i],<span class="hljs-built_in">make_pair</span>(i,n+<span class="hljs-number">2</span>)));<br>	&#125;<br>	ans=<span class="hljs-built_in">min</span>(ans,<span class="hljs-built_in">mst</span>(n+<span class="hljs-number">2</span>));<br><br>	<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld\n&quot;</span>,ans);<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 267</title>
    <url>/2022/09/03/abc267/</url>
    <content><![CDATA[<h2 id="NEC-Programming-Contest-2022-AtCoder-Beginner-Contest-267"><a href="#NEC-Programming-Contest-2022-AtCoder-Beginner-Contest-267" class="headerlink" title="NEC Programming Contest 2022 (AtCoder Beginner Contest 267)"></a><a href="https://atcoder.jp/contests/abc267">NEC Programming Contest 2022 (AtCoder Beginner Contest 267)</a></h2><h3 id="A-Saturday"><a href="#A-Saturday" class="headerlink" title="A - Saturday"></a><a href="https://atcoder.jp/contests/abc267/tasks/abc267_a">A - Saturday</a></h3><h4 id="题目翻译"><a href="#题目翻译" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入星期中的一天，输出还有几天到星期六</p>
<h4 id="题目思路"><a href="#题目思路" class="headerlink" title="题目思路"></a>题目思路</h4><p>直接用<code>map</code>模拟</p>
<h4 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br>map&lt;string,<span class="hljs-type">int</span>&gt; m;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	m[<span class="hljs-string">&quot;Monday&quot;</span>]=<span class="hljs-number">1</span>;<br>	m[<span class="hljs-string">&quot;Tuesday&quot;</span>]=<span class="hljs-number">2</span>;<br>	m[<span class="hljs-string">&quot;Wednesday&quot;</span>]=<span class="hljs-number">3</span>;<br>	m[<span class="hljs-string">&quot;Thursday&quot;</span>]=<span class="hljs-number">4</span>;<br>	m[<span class="hljs-string">&quot;Friday&quot;</span>]=<span class="hljs-number">5</span>;<br>	string s;<br>	cin&gt;&gt;s;<br>	cout&lt;&lt;<span class="hljs-number">6</span>-m[s];<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<h3 id="B-Split"><a href="#B-Split" class="headerlink" title="B - Split?"></a><a href="https://atcoder.jp/contests/abc267/tasks/abc267_b">B - Split?</a></h3><h4 id="题目翻译-1"><a href="#题目翻译-1" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入一个长度为<code>10</code>的<code>01</code>串,<code>0</code>表示倒了,<code>1</code>表示没倒,如果<code>1</code>倒了且没倒的列不连续,输出<code>Yes</code>,否则输出<code>No</code></p>
<h4 id="题目思路-1"><a href="#题目思路-1" class="headerlink" title="题目思路"></a>题目思路</h4><p>根据题意模拟</p>
<h4 id="AC代码-1"><a href="#AC代码-1" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">char</span> a[<span class="hljs-number">10</span>];<br><span class="hljs-type">int</span> c[<span class="hljs-number">10</span>]=&#123;<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>&#125;;<br><span class="hljs-type">int</span> b[<span class="hljs-number">7</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++)&#123;<br>		cin&gt;&gt;a[i];<br>		<span class="hljs-keyword">if</span>(a[i]==<span class="hljs-string">&#x27;1&#x27;</span>) b[c[i]]++;<br>	&#125;<br>	<span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;1&#x27;</span>)&#123;<br>		cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>;<br>	&#125;<br>	<span class="hljs-keyword">else</span>&#123;<br>		<span class="hljs-type">int</span> f=<span class="hljs-number">0</span>;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">5</span>;i++)&#123;<br>			<span class="hljs-keyword">if</span>(b[i]==<span class="hljs-number">0</span>||b[i+<span class="hljs-number">1</span>]!=<span class="hljs-number">0</span>) <span class="hljs-keyword">continue</span>;<br>			<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">2</span>;j&lt;<span class="hljs-number">7</span>;j++)&#123;<br>				<span class="hljs-keyword">if</span>(b[j]!=<span class="hljs-number">0</span>)&#123;<br>					f=<span class="hljs-number">1</span>;<br>					<span class="hljs-keyword">break</span>;<br>				&#125;<br>			&#125;<br>		&#125;<br>		<span class="hljs-keyword">if</span>(f) cout&lt;&lt;<span class="hljs-string">&quot;Yes&quot;</span>;<br>		<span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>;<br>	&#125;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<h3 id="C-Index-×-A-Continuous-ver"><a href="#C-Index-×-A-Continuous-ver" class="headerlink" title="C - Index × A(Continuous ver.)"></a><a href="https://atcoder.jp/contests/abc267/tasks/abc267_c">C - Index × A(Continuous ver.)</a></h3><h4 id="题目翻译-2"><a href="#题目翻译-2" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入一个长度为<code>n</code>的数组,找一个长度是<code>m</code>的子数组,使得$\sum\limits_{i&#x3D;1}^m{i*b_i}$最大</p>
<h4 id="题目思路-2"><a href="#题目思路-2" class="headerlink" title="题目思路"></a>题目思路</h4><p>数组$b_i&#x3D;\sum\limits_{j&#x3D;1}^i{a_j}$</p>
<p>数组$c_i&#x3D;\sum\limits_{j&#x3D;1}^i{a_j*j}$</p>
<p>对于每个$l,r$那么答案就为${c_l-c_{r}-l*(b_l-b_r)}$</p>
<h4 id="AC代码-2"><a href="#AC代码-2" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">200010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> b[<span class="hljs-number">200010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> c[<span class="hljs-number">200010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">int</span> n,m;<br>	cin&gt;&gt;n&gt;&gt;m;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		cin&gt;&gt;a[i];<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		b[i]=b[i<span class="hljs-number">-1</span>]+a[i<span class="hljs-number">-1</span>];<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		c[i]=c[i<span class="hljs-number">-1</span>]+a[i<span class="hljs-number">-1</span>]*i;<br>	&#125;<br>	<span class="hljs-type">long</span> <span class="hljs-type">long</span> z=<span class="hljs-number">-1e18</span>;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=m;i&lt;=n;i++)&#123;<br>		z=<span class="hljs-built_in">max</span>(z,c[i]-c[i-m]-(i-m)*(b[i]-b[i-m]));<br>	&#125;<br>	cout&lt;&lt;z;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<h3 id="D-Index-×-A-Not-Continuous-ver"><a href="#D-Index-×-A-Not-Continuous-ver" class="headerlink" title="D - Index × A(Not Continuous ver.)"></a><a href="https://atcoder.jp/contests/abc267/tasks/abc267_d">D - Index × A(Not Continuous ver.)</a></h3><h4 id="题目翻译-3"><a href="#题目翻译-3" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入一个长度为<code>n</code>的数组,找一个长度是<code>m</code>的子序列,使得$\sum\limits_{i&#x3D;1}^m{i*b_i}$最大</p>
<h4 id="题目思路-3"><a href="#题目思路-3" class="headerlink" title="题目思路"></a>题目思路</h4><p>因为题目中<code>n</code>仅为<code>2000</code>,可以考虑$O(n^2)$的<code>dp</code>做法,用<code>f[i][j]</code>表示选到第<code>i</code>个数时共选了<code>j</code>个数,转移方程为$f_{ij}&#x3D;\max(f_{i-1j},f_{i-1j-1}+a_i\times j)$</p>
<h4 id="AC代码-3"><a href="#AC代码-3" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">2010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> f[<span class="hljs-number">2010</span>][<span class="hljs-number">2010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">int</span> n,m;<br>	cin&gt;&gt;n&gt;&gt;m;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		cin&gt;&gt;a[i];<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=n;i++)&#123;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;<br>			f[i][j]=<span class="hljs-number">-1e18</span>;<br>		&#125;<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;<br>			f[i][j]=<span class="hljs-built_in">max</span>(f[i<span class="hljs-number">-1</span>][j],f[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+a[i]*j);<br>		&#125;<br>	&#125;<br>	cout&lt;&lt;f[n][m];<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
  </entry>
</search>
