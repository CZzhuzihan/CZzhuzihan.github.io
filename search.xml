<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>AtCoder Beginner Contest 249</title>
    <url>/2022/04/23/abc249/</url>
    <content><![CDATA[<h2 id="monoxer-programming-contest-2022atcoder-beginner-contest-249"><a
href="https://atcoder.jp/contests/abc249">Monoxer Programming Contest
2022（AtCoder Beginner Contest 249）</a></h2>
<h3 id="abc249_a"><a
href="https://atcoder.jp/contests/abc249/tasks/abc249_a">abc249_a</a></h3>
<h4 id="题目翻译">题目翻译</h4>
<p><code>Takahashi</code>以a米每秒的速度走b秒，歇c秒，循环
<code>Aoki</code>以d米每秒的速度 走e秒，歇f秒，循环
问<code>x</code>秒之后，谁领先? 位置一样的话，输出<code>Draw</code></p>
<h4 id="ac代码">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> a,b,c,d,e,f,x;<br>    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d&gt;&gt;e&gt;&gt;f&gt;&gt;x;<br>    <span class="hljs-type">int</span> n=x/(a+c);<br>    <span class="hljs-type">int</span> m=x/(d+f);<br>    <span class="hljs-type">int</span> p=x%(a+c);<br>    <span class="hljs-type">int</span> q=x%(d+f);<br>    n*=a,m*=d;<br>    n*=b,m*=e;<br>    <span class="hljs-keyword">if</span>(p&gt;=a) p=a;<br>    <span class="hljs-keyword">if</span>(q&gt;=d) q=d;<br>    p*=b,q*=e;<br>    n+=p;<br>    m+=q;<br>    <span class="hljs-keyword">if</span>(n&gt;m) cout&lt;&lt;<span class="hljs-string">&quot;Takahashi&quot;</span>;<br>    <span class="hljs-keyword">if</span>(n&lt;m) cout&lt;&lt;<span class="hljs-string">&quot;Aoki&quot;</span>;<br>    <span class="hljs-keyword">if</span>(n==m) cout&lt;&lt;<span class="hljs-string">&quot;Draw&quot;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="abc249_b"><a
href="https://atcoder.jp/contests/abc249/tasks/abc249_b">abc249_b</a></h3>
<h4 id="题目翻译-1">题目翻译</h4>
<p>输入一个由大小写字母组成的字符串
如果这个字符串满足以下三个条件，输出<code>Yes</code>，否则输出<code>No</code>
1. 包含大写字母 2. 包含小写字母 3. 不包含重复字符</p>
<h4 id="ac代码-1">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br>map&lt;<span class="hljs-type">char</span>,<span class="hljs-type">bool</span>&gt; g;<br>string s;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cin&gt;&gt;s;<br>    <span class="hljs-type">int</span> A=<span class="hljs-number">0</span>,a=<span class="hljs-number">0</span>,z=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;s.<span class="hljs-built_in">size</span>();i++)&#123;<br>        <span class="hljs-keyword">if</span>(s[i]&gt;=<span class="hljs-string">&#x27;a&#x27;</span>) a=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> A=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span>(g[s[i]]) z=<span class="hljs-number">0</span>;<br>        g[s[i]]=<span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(A&amp;&amp;a&amp;&amp;z) cout&lt;&lt;<span class="hljs-string">&quot;Yes&quot;</span>;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="abc249_c"><a
href="https://atcoder.jp/contests/abc249/tasks/abc249_c">abc249_c</a></h3>
<h4 id="题目翻译-2">题目翻译</h4>
<p>输入N个字符串，从中选一个子集，使得恰好出现K次的字母最多
保证一个字母在一个字符串中至多出现一次（所以出现K次的字母，意味着出现在K个字符串）
只需要输出在选取最优的子集情况下恰好出现K次的字母的个数</p>
<h4 id="ac代码-2">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br>string a[<span class="hljs-number">20</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> n,k;<br>    cin&gt;&gt;n&gt;&gt;k;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>    &#125;<br>    <span class="hljs-type">int</span> ans=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">1</span>&lt;&lt;n;i++)&#123;<br>        map&lt;<span class="hljs-type">char</span>,<span class="hljs-type">int</span>&gt; g;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;n;j++)&#123;<br>            <span class="hljs-keyword">if</span>(i&gt;&gt;j&amp;<span class="hljs-number">1</span>)&#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> l=<span class="hljs-number">0</span>;l&lt;a[j].<span class="hljs-built_in">size</span>();l++)&#123;<br>                    g[a[j][l]]++;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-type">int</span> z=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">26</span>;j++)&#123;<br>            <span class="hljs-keyword">if</span>(g[<span class="hljs-built_in">char</span>(j+<span class="hljs-string">&#x27;a&#x27;</span>)]==k) z++;<br>        &#125;<br>        ans=<span class="hljs-built_in">max</span>(ans,z);<br>    &#125;<br>    cout&lt;&lt;ans;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="abc249_d"><a
href="https://atcoder.jp/contests/abc249/tasks/abc249_d">abc249_d</a></h3>
<h4 id="题目翻译-3">题目翻译</h4>
<p>输入一个长度为<code>n</code>的数组，问有多少个有序对<code>(i,j,k)</code>满足<code>a[i]*a[j]=a[k]</code></p>
<h4 id="题目思路">题目思路</h4>
<p>枚举</p>
<h4 id="ac代码-3">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> g[<span class="hljs-number">200010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> n,s;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-type">int</span> x;<br>        cin&gt;&gt;x;<br>        s=<span class="hljs-built_in">max</span>(s,x);<br>        g[x]++;<br>    &#125;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> z=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> ai=<span class="hljs-number">1</span>;ai&lt;=s;ai++)&#123;<br>        <span class="hljs-keyword">if</span>(g[ai]==<span class="hljs-number">0</span>) <span class="hljs-keyword">continue</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> aj=<span class="hljs-number">1</span>;ai*aj&lt;=s;aj++)&#123;<br>            <span class="hljs-keyword">if</span>(g[aj]==<span class="hljs-number">0</span>) <span class="hljs-keyword">continue</span>;<br>            <span class="hljs-keyword">if</span>(g[ai*aj]&gt;<span class="hljs-number">0</span>) z+=g[ai]*g[aj]*g[ai*aj];<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;z;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 250</title>
    <url>/2022/05/08/abc250/</url>
    <content><![CDATA[<h2 id="atcoder-beginner-contest-250"><a
href="https://atcoder.jp/contests/abc250">AtCoder Beginner Contest
250</a></h2>
<h3 id="a---adjacent-squares"><a
href="https://atcoder.jp/contests/abc250/tasks/abc250_a">A - Adjacent
Squares</a></h3>
<h4 id="题目翻译">题目翻译</h4>
<p>输入<code>h</code>，<code>w</code>，<code>r</code>，<code>c</code>四个数，求出在一个长为<code>h</code>，宽为<code>w</code>的长方形中，坐标<code>r</code>，<code>c</code>向上下左右移动后，有多少种情况在长方形中。</p>
<h4 id="题目思路">题目思路</h4>
<p>枚举四种情况，判断即可。</p>
<h4 id="ac代码">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> dx[<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>&#125;;<br><span class="hljs-type">int</span> dy[<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>&#125;;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> h,w,r,c,s=<span class="hljs-number">0</span>;<br>    cin&gt;&gt;h&gt;&gt;w&gt;&gt;r&gt;&gt;c;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">4</span>;i++)&#123;<br>        <span class="hljs-type">int</span> nx=r+dx[i];<br>        <span class="hljs-type">int</span> ny=c+dy[i];<br>        <span class="hljs-keyword">if</span>(nx&gt;<span class="hljs-number">0</span>&amp;&amp;nx&lt;=h&amp;&amp;ny&gt;<span class="hljs-number">0</span>&amp;&amp;ny&lt;=w) s++;<br>    &#125;<br>    cout&lt;&lt;s;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="b---enlarged-checker-board"><a
href="https://atcoder.jp/contests/abc250/tasks/abc250_b">B - Enlarged
Checker Board</a></h3>
<h4 id="题目翻译-1">题目翻译</h4>
<p>输入<code>n</code>，<code>a</code>，<code>b</code>三个数，输出<code>n*n</code>块，每一块是一个<code>a*b</code>的长方形，编号为奇数的输出<code>.</code>，偶数则输出<code>#</code>。</p>
<h4 id="题目思路-1">题目思路</h4>
<p>二重循环，模拟即可。</p>
<h4 id="ac代码-1">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,a,b;<br>    cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n*a;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;n*b;j++)&#123;<br>            <span class="hljs-keyword">if</span>((i/a+j/b)%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>) cout&lt;&lt;<span class="hljs-string">&#x27;.&#x27;</span>;<br>            <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&#x27;#&#x27;</span>;<br>        &#125;<br>        cout&lt;&lt;endl;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="c---adjacent-swaps"><a
href="https://atcoder.jp/contests/abc250/tasks/abc250_b">C - Adjacent
Swaps</a></h3>
<h4 id="题目翻译-2">题目翻译</h4>
<p>输入<code>n</code>和<code>q</code>，包含<code>q</code>个询问，每个询问包含一个整数<code>x</code>，交换为<code>x</code>和后面一个数，如果<code>x</code>在最后，那么交换和<code>x</code>前的一个数。</p>
<h4 id="题目思路-2">题目思路</h4>
<p>用两个数组，一个数组表示每个数在数组中的下标，另一个表示每个下标上的数。</p>
<h4 id="ac代码-2">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> a[<span class="hljs-number">200010</span>];<br><span class="hljs-type">int</span> b[<span class="hljs-number">200010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,q;<br>    cin&gt;&gt;n&gt;&gt;q;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        a[i]=i;<br>        b[i]=i;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;q;i++)&#123;<br>        <span class="hljs-type">int</span> x;<br>        cin&gt;&gt;x;<br>        <span class="hljs-keyword">if</span>(a[x]==n)&#123;<br>            <span class="hljs-built_in">swap</span>(b[a[x]<span class="hljs-number">-1</span>],b[a[x]]);<br>            <span class="hljs-built_in">swap</span>(a[b[a[x]<span class="hljs-number">-1</span>]],a[b[a[x]]]);<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-built_in">swap</span>(b[a[x]+<span class="hljs-number">1</span>],b[a[x]]);<br>            <span class="hljs-built_in">swap</span>(a[b[a[x]+<span class="hljs-number">1</span>]],a[b[a[x]]]);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cout&lt;&lt;b[i]&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="d---250-like-number"><a
href="https://atcoder.jp/contests/abc250/tasks/abc250_d">D - 250-like
Number</a></h3>
<h4 id="题目翻译-3">题目翻译</h4>
<p>输入<code>n</code>，求<code>n</code>之前有多少个数<code>k</code>满足三个条件</p>
<ol type="1">
<li><span class="math inline">\(k=p*q^3\)</span></li>
<li><span class="math inline">\(p&lt;q\)</span></li>
<li><code>p</code>，<code>q</code>均为整数</li>
</ol>
<h4 id="题目思路-3">题目思路</h4>
<p>先算出一个素数表，求一个前缀和，处理一下即可</p>
<h4 id="ac代码-3">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br>ll b[<span class="hljs-number">1000010</span>];<br>ll a[<span class="hljs-number">1000010</span>];<br>ll z=<span class="hljs-number">0</span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> n,x=<span class="hljs-number">1</span>;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(ll i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">1000000</span>;i++)&#123;<br>		a[i]=i;<br>	&#125;<br>	<span class="hljs-keyword">for</span>(ll i=<span class="hljs-number">2</span>;i&lt;=<span class="hljs-number">1000000</span>;i++)&#123;<br>		<span class="hljs-keyword">if</span>(a[i]!=<span class="hljs-number">0</span>)&#123;<br>			<span class="hljs-keyword">for</span>(ll j=<span class="hljs-number">2</span>;j&lt;=<span class="hljs-number">1000000</span>;j++)&#123;<br>                <span class="hljs-keyword">if</span>(j*a[i]&gt;<span class="hljs-number">1000000</span>) <span class="hljs-keyword">break</span>;<br>				a[a[i]*j]=<span class="hljs-number">0</span>;<br>			&#125;<br>		&#125;<br>	&#125;<br>    a[<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(ll i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">1000000</span>;i++)&#123;<br>        b[i]=b[i<span class="hljs-number">-1</span>]+(a[i]!=<span class="hljs-number">0</span>);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(ll i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(i*i*i&gt;n) <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">if</span>(a[i]==<span class="hljs-number">0</span>) <span class="hljs-keyword">continue</span>;<br>        ll j=n/i/i/i;<br>        <span class="hljs-keyword">if</span>(j&gt;=i) j=i<span class="hljs-number">-1</span>;<br>        z+=b[j];<br>    &#125;<br>    cout&lt;&lt;z;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="g---stonks"><a
href="https://atcoder.jp/contests/abc250/tasks/abc250_g">G -
Stonks</a></h3>
<h4 id="题目">题目</h4>
<p>同<a
href="https://codeforces.com/contest/865/problem/D">CF856D</a></p>
<h4 id="ac代码-4">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br>priority_queue&lt;<span class="hljs-type">int</span>&gt; q;<br><span class="hljs-type">int</span> n,x;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> z;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>	cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>	cin&gt;&gt;n;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		cin&gt;&gt;x;<br>		q.<span class="hljs-built_in">push</span>(-x);<br>		q.<span class="hljs-built_in">push</span>(-x);<br>        z+=x+q.<span class="hljs-built_in">top</span>();<br>		q.<span class="hljs-built_in">pop</span>();<br>	&#125;<br>	cout&lt;&lt;z;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Atcoder</tag>
      </tags>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 251</title>
    <url>/2022/05/14/abc251/</url>
    <content><![CDATA[<h2
id="panasonic-programming-contest-2022atcoder-beginner-contest-251"><a
href="https://atcoder.jp/contests/abc251">Panasonic Programming Contest
2022(AtCoder Beginner Contest 251)</a></h2>
<h3 id="a---six-characters"><a
href="https://atcoder.jp/contests/abc251/tasks/abc251_a">A - Six
Characters</a></h3>
<h4 id="题目翻译">题目翻译</h4>
<p>输入一个长度<code>&lt;=3</code>的字符串，把这个字符串重复几遍使得字符串长度为<code>6</code></p>
<h4 id="题目思路">题目思路</h4>
<p>直接输出用<code>6</code>除以字符串长度遍</p>
<h4 id="ac代码">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    string a;<br>    cin&gt;&gt;a;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;(<span class="hljs-number">6</span>/a.<span class="hljs-built_in">size</span>());i++)&#123;<br>        cout&lt;&lt;a;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="b---at-most-3-judge-ver."><a
href="https://atcoder.jp/contests/abc251/tasks/abc251_b">B - At Most 3
(Judge ver.)</a></h3>
<h4 id="题目翻译-1">题目翻译</h4>
<p>输入<code>n</code>个数字<code>a[i]</code>，问<code>1</code>到<code>w</code>中有多少个数字，可以从这<code>n</code>个数字中选至多<code>3</code>个数字凑出来</p>
<h4 id="题目思路-1">题目思路</h4>
<p>三重循环，用数组记录一下。</p>
<h4 id="ac代码-1">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> a[<span class="hljs-number">310</span>];<br><span class="hljs-type">int</span> h[<span class="hljs-number">3000010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> n,w;<br>    cin&gt;&gt;n&gt;&gt;w;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        h[a[i]]=<span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;j&lt;n;j++)&#123;<br>            h[a[i]+a[j]]=<span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;j&lt;n;j++)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=j+<span class="hljs-number">1</span>;k&lt;n;k++)&#123;<br>                h[a[i]+a[j]+a[k]]=<span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-type">int</span> z=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=w;i++)&#123;<br>        <span class="hljs-keyword">if</span>(h[i]==<span class="hljs-number">1</span>) z++;<br>    &#125;<br>    cout&lt;&lt;z;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="c---poem-online-judge"><a
href="https://atcoder.jp/contests/abc251/tasks/abc251_c">C - Poem Online
Judge</a></h3>
<h4 id="题目翻译-2">题目翻译</h4>
<p>输入n个提交，每个提交是一个字符串s和分数t，只考虑第一次出现的提交，问分数最高的下标是第几次？</p>
<h4 id="题目思路-2">题目思路</h4>
<p>用一个<code>map</code>，记录一下即可。</p>
<h4 id="ac代码-2">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br>map&lt;string,<span class="hljs-type">bool</span>&gt; m;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> n,ans=<span class="hljs-number">0</span>,z=<span class="hljs-number">0</span>;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        string s;<br>        <span class="hljs-type">int</span> t;<br>        cin&gt;&gt;s&gt;&gt;t;<br>        <span class="hljs-keyword">if</span>(m[s]==<span class="hljs-number">1</span>) <span class="hljs-keyword">continue</span>;<br>        m[s]=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span>(t&gt;ans)&#123;<br>            ans=t;<br>            z=i;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;z+<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="d---at-most-3-contestant-ver."><a
href="https://atcoder.jp/contests/abc251/tasks/abc251_d">D - At Most 3
(Contestant ver.)</a></h3>
<h4 id="题目翻译-3">题目翻译</h4>
<p>输出不多于300个数字，要求对于1到1000000中的任意一个数字x，都可以从这300个数字中选至多三个加起来等于x</p>
<h4 id="题目思路-3">题目思路</h4>
<p>把<code>1000000</code>每两位分一段，每一段<code>100</code>个数字，共<code>300</code>个。</p>
<h4 id="ac代码-3">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> w;<br>    cin&gt;&gt;w;<br>    cout&lt;&lt;<span class="hljs-number">298</span>&lt;&lt;endl;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">99</span>;i++)&#123;<br>        cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">100</span>;i&lt;=<span class="hljs-number">9900</span>;i+=<span class="hljs-number">100</span>)&#123;<br>        cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">10000</span>;i&lt;=<span class="hljs-number">1000000</span>;i+=<span class="hljs-number">10000</span>)&#123;<br>        cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="e---takahashi-and-animals"><a
href="https://atcoder.jp/contests/abc251/tasks/abc251_e">E - Takahashi
and Animals</a></h3>
<h4 id="题目翻译-4">题目翻译</h4>
<p>输入一个环形数组，要求任意相邻2个数至少取一个，问和最少是多少</p>
<h4 id="题目思路-4">题目思路</h4>
<p>改成
任意相邻2个数至多取一个，问和最多是多少，再进行<code>dp</code>即可。</p>
<h4 id="ac代码-4">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">300010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> f[<span class="hljs-number">300010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> g[<span class="hljs-number">300010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> s=<span class="hljs-number">0</span>;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>        s+=a[i];<br>    &#125;<br>    f[<span class="hljs-number">1</span>]=a[<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n<span class="hljs-number">-1</span>;i++)&#123;<br>        f[i]=<span class="hljs-built_in">max</span>(f[i<span class="hljs-number">-1</span>],f[i<span class="hljs-number">-2</span>]+a[i]);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n<span class="hljs-number">-2</span>;i++)&#123;<br>        g[i]=<span class="hljs-built_in">max</span>(g[i<span class="hljs-number">-1</span>],g[i<span class="hljs-number">-2</span>]+a[i]);<br>    &#125;<br>    cout&lt;&lt;s-<span class="hljs-built_in">max</span>(f[n<span class="hljs-number">-1</span>],g[n<span class="hljs-number">-2</span>]+a[n]);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="f---two-spanning-trees"><a
href="https://atcoder.jp/contests/abc251/tasks/abc251_f">F - Two
Spanning Trees</a></h3>
<h4 id="题目翻译-5">题目翻译</h4>
<p>输入一个图，求出两个生成树T1和T2，要求在T1中任意非树边的两个节点都是祖孙关系，要求在T2中任意非树边的两个节点都不是祖孙关系。</p>
<h4 id="题目思路-5">题目思路</h4>
<p>分别用<code>dfs</code>和<code>bfs</code>进行生成。</p>
<h4 id="ac代码-5">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br>vector&lt;<span class="hljs-type">int</span>&gt; a[<span class="hljs-number">200010</span>];<br><span class="hljs-type">int</span> v[<span class="hljs-number">200010</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span>&#123;<br>    v[x]=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> i:a[x])&#123;<br>        <span class="hljs-keyword">if</span>(!v[i])&#123;<br>            cout&lt;&lt;x&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>&lt;&lt;i&lt;&lt;endl;<br>            <span class="hljs-built_in">dfs</span>(i);<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">bfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span>&#123;<br>    <span class="hljs-built_in">memset</span>(v,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span> v);<br>    queue&lt;<span class="hljs-type">int</span>&gt; q;<br>    q.<span class="hljs-built_in">push</span>(x);<br>    v[x]=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(q.<span class="hljs-built_in">size</span>())&#123;<br>        <span class="hljs-type">int</span> x=q.<span class="hljs-built_in">front</span>();<br>        q.<span class="hljs-built_in">pop</span>();<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> i:a[x])&#123;<br>            <span class="hljs-keyword">if</span>(!v[i])&#123;<br>                cout&lt;&lt;x&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>&lt;&lt;i&lt;&lt;endl;<br>                q.<span class="hljs-built_in">push</span>(i);<br>                v[i]=<span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> n,m;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;m;i++)&#123;<br>        <span class="hljs-type">int</span> x,y;<br>        cin&gt;&gt;x&gt;&gt;y;<br>        a[x].<span class="hljs-built_in">push_back</span>(y);<br>        a[y].<span class="hljs-built_in">push_back</span>(x);<br>    &#125;<br>    <span class="hljs-built_in">dfs</span>(<span class="hljs-number">1</span>);<br>    <span class="hljs-built_in">bfs</span>(<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 252</title>
    <url>/2022/05/21/abc252/</url>
    <content><![CDATA[<h2 id="atcoder-beginner-contest-252"><a
href="https://atcoder.jp/contests/abc252">AtCoder Beginner Contest
252</a></h2>
<h3 id="a---ascii-code"><a
href="https://atcoder.jp/contests/abc252/tasks/abc252_a">A - ASCII
code</a></h3>
<h4 id="题目翻译">题目翻译</h4>
<p>输入一个数字，输出一这个数字为<code>ascll</code>码的字符。
模拟一下即可。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>	cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>	<span class="hljs-type">int</span> n;<br>	cin&gt;&gt;n;<br>	cout&lt;&lt;<span class="hljs-built_in">char</span>(n);<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="b---takahashis-failure"><a
href="https://atcoder.jp/contests/abc252/tasks/abc252_b">B - Takahashi's
Failure</a></h3>
<h4 id="题目翻译-1">题目翻译</h4>
<p>输入<code>n</code>和<code>k</code>，长度为'n'的数组<code>a</code>，长度为<code>k</code>的数组<code>b</code>问是否存在一个<code>b[i]</code>使得<code>a[b[i]]</code>
是<code>a</code>数组中的最大值？如果有，输出<code>Yes</code>，如果没有，输出<code>No</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> a[<span class="hljs-number">110</span>];<br><span class="hljs-type">int</span> b[<span class="hljs-number">110</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>	cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>	<span class="hljs-type">int</span> n,k,s=<span class="hljs-number">0</span>;<br>	cin&gt;&gt;n&gt;&gt;k;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		cin&gt;&gt;a[i];<br>		s=<span class="hljs-built_in">max</span>(s,a[i]);<br>	&#125;<br>	<span class="hljs-type">int</span> f=<span class="hljs-number">0</span>;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;k;i++)&#123;<br>		cin&gt;&gt;b[i];<br>		<span class="hljs-keyword">if</span>(a[b[i]<span class="hljs-number">-1</span>]==s) f=<span class="hljs-number">1</span>;<br>	&#125;<br>	cout&lt;&lt;(f?<span class="hljs-string">&quot;Yes&quot;</span>:<span class="hljs-string">&quot;No&quot;</span>);<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="c---slot-strategy"><a
href="https://atcoder.jp/contests/abc252/tasks/abc252_c">C - Slot
Strategy</a></h3>
<h4 id="题目翻译-2">题目翻译</h4>
<p>输入<code>n</code>个由<code>0</code>到<code>9</code>
<code>10</code>个数字构成的排列，如果在第<code>i</code>秒按下停止按钮，那么他会显示第<code>i%10</code>个字符（<code>0</code>秒最左的字符，<code>9</code>秒最右的字符），同一秒只能按下一个停止按钮，目标是让这<code>n</code>个排列显示相同的字母，问最优情况下需要几秒？
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> a[<span class="hljs-number">10</span>][<span class="hljs-number">110</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>	cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>	<span class="hljs-type">int</span> n;<br>	cin&gt;&gt;n;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">10</span>;j++)&#123;<br>			<span class="hljs-type">char</span> x;<br>			cin&gt;&gt;x;<br>			a[x-<span class="hljs-string">&#x27;0&#x27;</span>][i]=j;<br>		&#125;<br>	&#125;<br>	<span class="hljs-type">int</span> ans=<span class="hljs-number">1e9</span>;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++)&#123;<br>		<span class="hljs-type">int</span> b[<span class="hljs-number">1010</span>];<br>		<span class="hljs-type">int</span> z=<span class="hljs-number">0</span>;<br>		<span class="hljs-built_in">memset</span>(b,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span> b);<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;n;j++)&#123;<br>			<span class="hljs-type">int</span> s=<span class="hljs-number">0</span>;<br>			<span class="hljs-keyword">while</span>(b[a[i][j]+s*<span class="hljs-number">10</span>]==<span class="hljs-number">1</span>)&#123;<br>				s++;<br>			&#125;<br>			z=<span class="hljs-built_in">max</span>(s*<span class="hljs-number">10</span>+a[i][j],z);<br>			b[s*<span class="hljs-number">10</span>+a[i][j]]=<span class="hljs-number">1</span>;<br>		&#125;<br>		ans=<span class="hljs-built_in">min</span>(ans,z);<br>	&#125;<br>	cout&lt;&lt;ans;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure> ### <a
href="https://atcoder.jp/contests/abc252/tasks/abc252_d">D - Distinct
Trio</a></p>
<h4 id="题目翻译-3">题目翻译</h4>
<p>输入<code>n</code>和长度为<code>n</code>的数组<code>a[i]</code>，找到三个<code>i</code>，<code>j</code>，<code>k</code>满足
1. <code>1&lt;=i&lt;j&lt;k&lt;=n</code> 2.
<code>a[i]</code>，<code>a[j]</code>，<code>a[k]</code>互不相同</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">200010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> m[<span class="hljs-number">200010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">long</span> <span class="hljs-type">long</span> n,s=<span class="hljs-number">0</span>;<br>	cin&gt;&gt;n;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		cin&gt;&gt;a[i];<br>		m[a[i]]++;<br>		s++;<br>	&#125;<br>	<span class="hljs-type">long</span> <span class="hljs-type">long</span> z1=n*(n<span class="hljs-number">-1</span>)*(n<span class="hljs-number">-2</span>)/<span class="hljs-number">6</span>,z2=<span class="hljs-number">0</span>,z3=<span class="hljs-number">0</span>;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">200000</span>;i++)&#123;<br>		<span class="hljs-keyword">if</span>(m[i]&gt;=<span class="hljs-number">3</span>) z3+=(m[i]*(m[i]<span class="hljs-number">-1</span>)*(m[i]<span class="hljs-number">-2</span>)/<span class="hljs-number">6</span>);<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">200000</span>;i++)&#123;<br>		z2+=(m[i]*(m[i]<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>*(s-m[i]));<br>	&#125;<br>	cout&lt;&lt;z1-z2-z3;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="f---bread"><a
href="https://atcoder.jp/contests/abc252/tasks/abc252_f">F -
Bread</a></h3>
<h4 id="题目翻译-4">题目翻译</h4>
<p>初始有长度为<code>l</code>的木棒，需要砍成<code>n</code>段，我们需要的长度<code>a[i]</code>，最后可能有剩余，长度为<code>k</code>的砍成<code>x</code>和<code>k-x</code>需要<code>k</code>的代价，输出最小代价。
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">200010</span>];<br>multiset&lt;<span class="hljs-type">long</span> <span class="hljs-type">long</span>&gt; c;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>	cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>	<span class="hljs-type">long</span> <span class="hljs-type">long</span> n,l,s=<span class="hljs-number">0</span>;<br>	cin&gt;&gt;n&gt;&gt;l;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		cin&gt;&gt;a[i];<br>		s+=a[i];<br>		c.<span class="hljs-built_in">insert</span>(a[i]);<br>	&#125;<br>	<span class="hljs-type">long</span> <span class="hljs-type">long</span> ans=<span class="hljs-number">0</span>;<br>	<span class="hljs-keyword">if</span>(l-s!=<span class="hljs-number">0</span>) c.<span class="hljs-built_in">insert</span>(l-s);<br>	<span class="hljs-keyword">while</span>(c.<span class="hljs-built_in">size</span>()!=<span class="hljs-number">1</span>)&#123;<br>		<span class="hljs-type">long</span> <span class="hljs-type">long</span> x,y;<br>		x=*c.<span class="hljs-built_in">begin</span>();<br>		c.<span class="hljs-built_in">erase</span>(c.<span class="hljs-built_in">begin</span>());<br>		y=*c.<span class="hljs-built_in">begin</span>();<br>		c.<span class="hljs-built_in">erase</span>(c.<span class="hljs-built_in">begin</span>());<br>		ans+=(x+y);<br>		c.<span class="hljs-built_in">insert</span>(x+y);<br>	&#125;<br>	cout&lt;&lt;ans;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p>
]]></content>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 263</title>
    <url>/2022/08/06/abc263/</url>
    <content><![CDATA[<h2 id="line-verda-programming-contestatcoder-beginner-contest-263"><a
href="https://atcoder.jp/contests/abc263">LINE Verda Programming
Contest（AtCoder Beginner Contest 263）</a></h2>
<h3 id="a---full-house"><a
href="https://atcoder.jp/contests/abc263/tasks/abc263_a">A - Full
House</a></h3>
<h4 id="题目翻译">题目翻译</h4>
<p>输入<code>5</code>个数字，问是不是<code>3</code>个相同且另外<code>2</code>个也相同</p>
<h4 id="题目思路">题目思路</h4>
<p>排序之后判断</p>
<h4 id="ac代码">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> a[<span class="hljs-number">10</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">5</span>;i++)&#123;<br>        cin&gt;&gt;a[i];<br>    &#125;<br>    <span class="hljs-built_in">sort</span>(a+<span class="hljs-number">1</span>,a+<span class="hljs-number">6</span>);<br>    <span class="hljs-type">int</span> z=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">1</span>]!=a[<span class="hljs-number">2</span>]) z=<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">2</span>]!=a[<span class="hljs-number">3</span>]&amp;&amp;a[<span class="hljs-number">3</span>]!=a[<span class="hljs-number">4</span>]) z=<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">4</span>]!=a[<span class="hljs-number">5</span>]) z=<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">if</span>(z==<span class="hljs-number">0</span>) cout&lt;&lt;<span class="hljs-string">&quot;Yes&quot;</span>;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="b---ancestor"><a
href="https://atcoder.jp/contests/abc263/tasks/abc263_b">B -
Ancestor</a></h3>
<h4 id="题目翻译-1">题目翻译</h4>
<p>输入一个树<code>n</code>个点，点<code>i</code>的父亲节点是<span
class="math inline">\(p[i]\)</span>，保证<span
class="math inline">\(p[i]&lt;i\)</span>，
点<code>1</code>深度为<code>0</code>，问点<code>n</code>深度是多少？
#### 题目思路</p>
<p>从第<code>n</code>个节点往上推即可</p>
<h4 id="ac代码-1">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> a[<span class="hljs-number">60</span>];<br><span class="hljs-type">int</span> f[<span class="hljs-number">60</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>        f[i]=a[i];<br>    &#125;<br>    <span class="hljs-type">int</span> x=n;<br>    <span class="hljs-type">int</span> s=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(;x!=<span class="hljs-number">1</span>;s++)&#123;<br>        x=f[x];<br>    &#125;<br>    cout&lt;&lt;s;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="c---monotonically-increasing"><a
href="https://atcoder.jp/contests/abc263/tasks/abc263_c">C -
Monotonically Increasing</a></h3>
<h4 id="题目翻译-2">题目翻译</h4>
<p>从1到<code>m</code>中选<code>n</code>个数字，按字典序输出所有组合。</p>
<h4 id="题目思路-1">题目思路</h4>
<p><code>dfs</code></p>
<h4 id="ac代码-2">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,m;<br><span class="hljs-type">int</span> a[<span class="hljs-number">20</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> l)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(x==n+<span class="hljs-number">1</span>)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            cout&lt;&lt;a[i]&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>;<br>        &#125;<br>        cout&lt;&lt;endl;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=l+<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;<br>        a[x]=i;<br>        <span class="hljs-built_in">solve</span>(x+<span class="hljs-number">1</span>,i);<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-built_in">solve</span>(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="d---left-right-operation"><a
href="https://atcoder.jp/contests/abc263/tasks/abc263_d">D - Left Right
Operation</a></h3>
<h4 id="题目翻译-3">题目翻译</h4>
<p>输入一个数组，把最左若干个数字改成<code>l</code>，把最右若干个数字改成<code>r</code>(可以不改),问最后数组的和最小是多少？</p>
<h4 id="题目思路-2">题目思路</h4>
<p>求前缀和后dp即可(此题要<code>long long</code>)</p>
<h4 id="ac代码-3">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">200010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> b[<span class="hljs-number">200010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> n,l,r;<br>    cin&gt;&gt;n&gt;&gt;l&gt;&gt;r;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        b[i]=b[i<span class="hljs-number">-1</span>]+a[i<span class="hljs-number">-1</span>];<br>    &#125;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> x[<span class="hljs-number">200010</span>];<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> z=<span class="hljs-number">1e18</span>;<br>    <span class="hljs-built_in">memset</span>(x,<span class="hljs-number">0x7f</span>,<span class="hljs-keyword">sizeof</span> x);<br>    x[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        x[i]=<span class="hljs-built_in">min</span>(x[i<span class="hljs-number">-1</span>],i*l-b[i]);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>,i=<span class="hljs-number">0</span>;j&lt;=n;j++,i++)&#123;<br>        z=<span class="hljs-built_in">min</span>(z,x[j]+(n-j)*r+b[j]);<br>    &#125;<br>    cout&lt;&lt;z;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 267</title>
    <url>/2022/09/03/abc267/</url>
    <content><![CDATA[<h2 id="nec-programming-contest-2022-atcoder-beginner-contest-267"><a
href="https://atcoder.jp/contests/abc267">NEC Programming Contest 2022
(AtCoder Beginner Contest 267)</a></h2>
<h3 id="a---saturday"><a
href="https://atcoder.jp/contests/abc267/tasks/abc267_a">A -
Saturday</a></h3>
<h4 id="题目翻译">题目翻译</h4>
<p>输入星期中的一天，输出还有几天到星期六</p>
<h4 id="题目思路">题目思路</h4>
<p>直接用<code>map</code>模拟</p>
<h4 id="ac代码">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br>map&lt;string,<span class="hljs-type">int</span>&gt; m;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	m[<span class="hljs-string">&quot;Monday&quot;</span>]=<span class="hljs-number">1</span>;<br>	m[<span class="hljs-string">&quot;Tuesday&quot;</span>]=<span class="hljs-number">2</span>;<br>	m[<span class="hljs-string">&quot;Wednesday&quot;</span>]=<span class="hljs-number">3</span>;<br>	m[<span class="hljs-string">&quot;Thursday&quot;</span>]=<span class="hljs-number">4</span>;<br>	m[<span class="hljs-string">&quot;Friday&quot;</span>]=<span class="hljs-number">5</span>;<br>	string s;<br>	cin&gt;&gt;s;<br>	cout&lt;&lt;<span class="hljs-number">6</span>-m[s];<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="b---split"><a
href="https://atcoder.jp/contests/abc267/tasks/abc267_b">B -
Split?</a></h3>
<h4 id="题目翻译-1">题目翻译</h4>
<p>输入一个长度为<code>10</code>的<code>01</code>串,<code>0</code>表示倒了,<code>1</code>表示没倒,如果<code>1</code>倒了且没倒的列不连续,输出<code>Yes</code>,否则输出<code>No</code></p>
<h4 id="题目思路-1">题目思路</h4>
<p>根据题意模拟</p>
<h4 id="ac代码-1">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">char</span> a[<span class="hljs-number">10</span>];<br><span class="hljs-type">int</span> c[<span class="hljs-number">10</span>]=&#123;<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>&#125;;<br><span class="hljs-type">int</span> b[<span class="hljs-number">7</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++)&#123;<br>		cin&gt;&gt;a[i];<br>		<span class="hljs-keyword">if</span>(a[i]==<span class="hljs-string">&#x27;1&#x27;</span>) b[c[i]]++;<br>	&#125;<br>	<span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;1&#x27;</span>)&#123;<br>		cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>;<br>	&#125;<br>	<span class="hljs-keyword">else</span>&#123;<br>		<span class="hljs-type">int</span> f=<span class="hljs-number">0</span>;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">5</span>;i++)&#123;<br>			<span class="hljs-keyword">if</span>(b[i]==<span class="hljs-number">0</span>||b[i+<span class="hljs-number">1</span>]!=<span class="hljs-number">0</span>) <span class="hljs-keyword">continue</span>;<br>			<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">2</span>;j&lt;<span class="hljs-number">7</span>;j++)&#123;<br>				<span class="hljs-keyword">if</span>(b[j]!=<span class="hljs-number">0</span>)&#123;<br>					f=<span class="hljs-number">1</span>;<br>					<span class="hljs-keyword">break</span>;<br>				&#125;<br>			&#125;<br>		&#125;<br>		<span class="hljs-keyword">if</span>(f) cout&lt;&lt;<span class="hljs-string">&quot;Yes&quot;</span>;<br>		<span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>;<br>	&#125;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="c---index-acontinuous-ver."><a
href="https://atcoder.jp/contests/abc267/tasks/abc267_c">C - Index ×
A(Continuous ver.)</a></h3>
<h4 id="题目翻译-2">题目翻译</h4>
<p>输入一个长度为<code>n</code>的数组,找一个长度是<code>m</code>的子数组,使得<span
class="math inline">\(\sum\limits_{i=1}^m{i*b_i}\)</span>最大</p>
<h4 id="题目思路-2">题目思路</h4>
<p>数组<span
class="math inline">\(b_i=\sum\limits_{j=1}^i{a_j}\)</span></p>
<p>数组<span
class="math inline">\(c_i=\sum\limits_{j=1}^i{a_j*j}\)</span></p>
<p>对于每个<span class="math inline">\(l,r\)</span>那么答案就为<span
class="math inline">\({c_l-c_{r}-l*(b_l-b_r)}\)</span></p>
<h4 id="ac代码-2">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">200010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> b[<span class="hljs-number">200010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> c[<span class="hljs-number">200010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">int</span> n,m;<br>	cin&gt;&gt;n&gt;&gt;m;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		cin&gt;&gt;a[i];<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		b[i]=b[i<span class="hljs-number">-1</span>]+a[i<span class="hljs-number">-1</span>];<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		c[i]=c[i<span class="hljs-number">-1</span>]+a[i<span class="hljs-number">-1</span>]*i;<br>	&#125;<br>	<span class="hljs-type">long</span> <span class="hljs-type">long</span> z=<span class="hljs-number">-1e18</span>;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=m;i&lt;=n;i++)&#123;<br>		z=<span class="hljs-built_in">max</span>(z,c[i]-c[i-m]-(i-m)*(b[i]-b[i-m]));<br>	&#125;<br>	cout&lt;&lt;z;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="d---index-anot-continuous-ver."><a
href="https://atcoder.jp/contests/abc267/tasks/abc267_d">D - Index ×
A(Not Continuous ver.)</a></h3>
<h4 id="题目翻译-3">题目翻译</h4>
<p>输入一个长度为<code>n</code>的数组,找一个长度是<code>m</code>的子序列,使得<span
class="math inline">\(\sum\limits_{i=1}^m{i*b_i}\)</span>最大</p>
<h4 id="题目思路-3">题目思路</h4>
<p>因为题目中<code>n</code>仅为<code>2000</code>,可以考虑<span
class="math inline">\(O(n^2)\)</span>的<code>dp</code>做法,用<code>f[i][j]</code>表示选到第<code>i</code>个数时共选了<code>j</code>个数,转移方程为<span
class="math inline">\(f_{ij}=\max(f_{i-1j},f_{i-1j-1}+a_i\times
j)\)</span></p>
<h4 id="ac代码-3">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">2010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> f[<span class="hljs-number">2010</span>][<span class="hljs-number">2010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">int</span> n,m;<br>	cin&gt;&gt;n&gt;&gt;m;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		cin&gt;&gt;a[i];<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=n;i++)&#123;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;<br>			f[i][j]=<span class="hljs-number">-1e18</span>;<br>		&#125;<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;<br>			f[i][j]=<span class="hljs-built_in">max</span>(f[i<span class="hljs-number">-1</span>][j],f[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+a[i]*j);<br>		&#125;<br>	&#125;<br>	cout&lt;&lt;f[n][m];<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 270</title>
    <url>/2022/09/24/abc270/</url>
    <content><![CDATA[<h2
id="toyota-motor-corporation-programming-contest-2022atcoder-beginner-contest-270"><a
href="https://atcoder.jp/contests/abc270/">TOYOTA MOTOR CORPORATION
Programming Contest 2022(AtCoder Beginner Contest 270)</a></h2>
<h3 id="a---1-2-4-test"><a
href="https://atcoder.jp/contests/abc270/tasks/abc270_a">A - 1-2-4
Test</a></h3>
<h4 id="题目翻译">题目翻译</h4>
<p>输入两个数<code>a</code>、<code>b</code>，输出<code>a|b</code></p>
<h4 id="ac代码">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">int</span> x,y;<br>	cin&gt;&gt;x&gt;&gt;y;<br>	cout&lt;&lt;(x | y);<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="b---hammer"><a
href="https://atcoder.jp/contests/abc270/tasks/abc270_b">B -
Hammer</a></h3>
<h4 id="题目翻译-1">题目翻译</h4>
<p>输入<code>x</code>、<code>y</code>、<code>z</code>三个数轴上的点，初始在<code>0</code>，目标是<code>x</code>，有一个障碍物<code>y</code>，如果要通过他需要到<code>z</code>处取一个锤子，问<code>0</code>到<code>x</code>的最短路径，无解则输出<code>-1</code></p>
<h4 id="题目思路">题目思路</h4>
<p>注意<code>x</code>、<code>y</code>、<code>z</code>可能有负数。</p>
<h4 id="ac代码-1">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">int</span> x,y,z;<br>	cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;<br>	<span class="hljs-keyword">if</span>(y&gt;<span class="hljs-number">0</span>&amp;&amp;y&lt;x)&#123;<br>		<span class="hljs-keyword">if</span>(z&gt;y) cout&lt;&lt;<span class="hljs-number">-1</span>;<br>		<span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-built_in">abs</span>(z)+<span class="hljs-built_in">abs</span>(y-z)+<span class="hljs-built_in">abs</span>(y-x);<br>	&#125;<br>	<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(y&lt;<span class="hljs-number">0</span>&amp;&amp;x&lt;y)&#123;<br>		<span class="hljs-keyword">if</span>(z&lt;y) cout&lt;&lt;<span class="hljs-number">-1</span>;<br>		<span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-built_in">abs</span>(z)+<span class="hljs-built_in">abs</span>(y-z)+<span class="hljs-built_in">abs</span>(y-x);<br>	&#125;<br>	<span class="hljs-keyword">else</span>&#123;<br>		cout&lt;&lt;<span class="hljs-built_in">abs</span>(x);<br>	&#125;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="c---simple-path"><a
href="https://atcoder.jp/contests/abc270/tasks/abc270_c">C - Simple
path</a></h3>
<h4 id="题目翻译-2">题目翻译</h4>
<p>输入一棵树，求<code>x</code>到的最短路径。</p>
<h4 id="题目思路-1">题目思路</h4>
<p>直接进行树上<code>dfs</code>，开一个<code>vector</code>记录路径。</p>
<h4 id="ac代码-2">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br>vector&lt;<span class="hljs-type">int</span>&gt; a[<span class="hljs-number">200010</span>];<br>vector&lt;<span class="hljs-type">int</span>&gt; ans;<br><span class="hljs-type">int</span> s,e,f=<span class="hljs-number">0</span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span>&#123;<br>	<span class="hljs-keyword">if</span>(f==<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span>;<br>	<span class="hljs-keyword">if</span>(x==e)&#123;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;ans.<span class="hljs-built_in">size</span>();i++)&#123;<br>			cout&lt;&lt;ans[i]&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>;<br>		&#125;<br>		f=<span class="hljs-number">1</span>;<br>		<span class="hljs-keyword">return</span>;<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;a[x].<span class="hljs-built_in">size</span>();i++)&#123;<br>		<span class="hljs-keyword">if</span>(a[x][i]!=y)&#123;<br>			ans.<span class="hljs-built_in">push_back</span>(a[x][i]);<br>			<span class="hljs-built_in">dfs</span>(a[x][i],x);<br>			ans.<span class="hljs-built_in">pop_back</span>();<br>		&#125;<br>	&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">int</span> n;<br>	cin&gt;&gt;n&gt;&gt;s&gt;&gt;e;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n<span class="hljs-number">-1</span>;i++)&#123;<br>		<span class="hljs-type">int</span> u,v;<br>		cin&gt;&gt;u&gt;&gt;v;<br>		a[u].<span class="hljs-built_in">push_back</span>(v);<br>		a[v].<span class="hljs-built_in">push_back</span>(u);<br>	&#125;<br>	ans.<span class="hljs-built_in">push_back</span>(s);<br>	<span class="hljs-built_in">dfs</span>(s,<span class="hljs-number">-1</span>);<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="d---stones"><a
href="https://atcoder.jp/contests/abc270/tasks/abc270_d">D -
Stones</a></h3>
<h4 id="题目翻译-3">题目翻译</h4>
<p>初始有<code>k</code>个石子，有<code>k</code>种操作，第<code>i</code>个操作是取走<span
class="math inline">\(a_i\)</span>个石子，保证<span
class="math inline">\(A_1=1\)</span>，双方轮流操作，希望最大化自己取的石子个数，问先手怎么做最好。</p>
<h4 id="题目思路-2">题目思路</h4>
<p>观察这个数据 <figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">18<br>1 5 6 7<br></code></pre></td></tr></table></figure>
最优方案是先手拿<code>6</code>和<code>5</code>，后手拿<code>7</code>和<code>1</code></p>
<p>如果贪心，先手拿<code>7</code>，后手也拿<code>7</code>，先手拿不走剩下的<code>4</code>。</p>
<p>所以我们得出了一个结论，此题需要动态规划。</p>
<p>用<span
class="math inline">\(f_i\)</span>表示有<code>i</code>石子时先手的最佳分数。</p>
<h4 id="ac代码-3">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> f[<span class="hljs-number">10010</span>];<br><span class="hljs-type">int</span> a[<span class="hljs-number">110</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">int</span> n,k;<br>	cin&gt;&gt;n&gt;&gt;k;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;k;i++)&#123;<br>		cin&gt;&gt;a[i];<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;k;j++)&#123;<br>			<span class="hljs-keyword">if</span>(i&gt;=a[j])&#123;<br>				f[i]=<span class="hljs-built_in">max</span>(f[i],i-f[i-a[j]]);<br>			&#125;<br>		&#125;<br>	&#125;<br>	cout&lt;&lt;f[n]&lt;&lt;endl;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="e---apple-baskets-on-circle"><a
href="https://atcoder.jp/contests/abc270/tasks/abc270_e">E - Apple
Baskets on Circle</a></h3>
<h4 id="题目翻译-4">题目翻译</h4>
<p><code>n</code>个篮子，初始第<code>i</code>个篮子有<span
class="math inline">\(a_i\)</span>个苹果，<code>1</code>到<code>n</code>无限循环，如果当前的篮子有苹果，就吃掉。，无论有没有苹果，就移动到下一个篮子，问吃掉前<code>k</code>个苹果后，每个篮子有多少个苹果</p>
<h4 id="题目思路-3">题目思路</h4>
<p>直接排序后分几步模拟。</p>
<h4 id="ac代码-4">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">100010</span>];<br>pair&lt;<span class="hljs-type">long</span> <span class="hljs-type">long</span>,<span class="hljs-type">int</span>&gt; b[<span class="hljs-number">100010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-type">int</span> n;<br>	<span class="hljs-type">long</span> <span class="hljs-type">long</span> k;<br>	cin&gt;&gt;n&gt;&gt;k;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		cin&gt;&gt;a[i];<br>		b[i].first=a[i];<br>		b[i].second=i;<br>	&#125;<br>	<span class="hljs-built_in">sort</span>(b,b+n);<br>	<span class="hljs-type">int</span> bi=<span class="hljs-number">-1</span>;<br>	<span class="hljs-type">long</span> <span class="hljs-type">long</span> l=<span class="hljs-number">0</span>;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<span class="hljs-built_in">i</span>&lt;n;i++)&#123;<br>		<span class="hljs-keyword">if</span>(k&gt;(b[i].first-l)*(n-i))&#123;<br>			k-=(b[i].first-l)*(n-i);<br>		&#125;<br>		<span class="hljs-keyword">else</span>&#123;<br>			bi=i;<br>			<span class="hljs-keyword">break</span>;<br>		&#125;<br>		l=b[i].first;<br>	&#125;<br>	<span class="hljs-type">int</span> d=n-bi;<br>	l+=k/d;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		a[i]=<span class="hljs-built_in">max</span>(a[i]-l,<span class="hljs-number">0LL</span>);<br>	&#125;<br>	k%=d;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		<span class="hljs-keyword">if</span>(a[i]&gt;<span class="hljs-number">0</span>&amp;&amp;k&gt;<span class="hljs-number">0</span>)&#123;<br>			a[i]--;<br>			k--;<br>		&#125;<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>		cout&lt;&lt;a[i]&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>;<br>	&#125;<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="f---transportation"><a
href="https://atcoder.jp/contests/abc270/tasks/abc270_f">F -
Transportation</a></h3>
<h4 id="题目翻译-5">题目翻译</h4>
<p>有<code>n</code>个点，<code>m</code>条边，要让他们连通，除了直接连边外，可以在第<code>i</code>个点花<span
class="math inline">\(x_i\)</span>的代价修港口，所有有港口的点认为是连通的，还可以在第<code>i</code>个点花<span
class="math inline">\(y_i\)</span>的代价修机场，所有有机场的点认为是连通的，问最小代价。</p>
<h4 id="题目思路-4">题目思路</h4>
<p>进行四次最小生成树(<code>mst</code>)
不建机场或港口进行一次，只建机场进行一次，只建港口进行一次，两个都建进行一次。</p>
<h4 id="ac代码-5">AC代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> f[<span class="hljs-number">200010</span>];<br><span class="hljs-type">int</span> x[<span class="hljs-number">200010</span>];<br><span class="hljs-type">int</span> y[<span class="hljs-number">200010</span>];<br><span class="hljs-type">int</span> n,m,l;<br>vector&lt;pair&lt;<span class="hljs-type">int</span>,pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; &gt; &gt; a;<br>vector&lt;pair&lt;<span class="hljs-type">int</span>,pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; &gt; &gt; e;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">F</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span>&#123;<br>	<span class="hljs-keyword">if</span>(f[x]==x)&#123;<br>		<span class="hljs-keyword">return</span> x;<br>	&#125;<br>	f[x]=<span class="hljs-built_in">F</span>(f[x]);<br>	<span class="hljs-keyword">return</span> f[x];<br>&#125;<br><span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title">mst</span><span class="hljs-params">(<span class="hljs-type">int</span> c)</span></span>&#123;<br>	<span class="hljs-built_in">sort</span>(e.<span class="hljs-built_in">begin</span>(),e.<span class="hljs-built_in">end</span>());<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n+<span class="hljs-number">2</span>;i++)&#123;<br>		f[i]=i;<br>	&#125;<br>	<span class="hljs-type">long</span> <span class="hljs-type">long</span> ans=<span class="hljs-number">0</span>;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;e.<span class="hljs-built_in">size</span>();i++)&#123;<br>		<span class="hljs-type">int</span> x=<span class="hljs-built_in">F</span>(e[i].second.first);<br>		<span class="hljs-type">int</span> y=<span class="hljs-built_in">F</span>(e[i].second.second);<br>		<span class="hljs-keyword">if</span>(x!=y)&#123;<br>			f[x]=y;<br>			c--;<br>			ans+=e[i].first;<br>		&#125;<br>	&#125;<br>	<span class="hljs-keyword">if</span>(c&gt;<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">1e18</span>;<br>	<span class="hljs-keyword">return</span> ans;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>	<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;x[i]);<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;y[i]);<br>	&#125;<br>	a.<span class="hljs-built_in">resize</span>(m);<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;m;i++)&#123;<br>		<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d&quot;</span>,&amp;a[i].second.first,&amp;a[i].second.second,&amp;a[i].first);<br>	&#125;<br>	<span class="hljs-type">long</span> <span class="hljs-type">long</span> ans=<span class="hljs-number">1e18</span>;<br>	e=a;<br>	ans=<span class="hljs-built_in">min</span>(ans,<span class="hljs-built_in">mst</span>(n));<br><br>	e=a;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		e.<span class="hljs-built_in">push_back</span>(<span class="hljs-built_in">make_pair</span>(x[i],<span class="hljs-built_in">make_pair</span>(i,n+<span class="hljs-number">1</span>)));<br>	&#125;<br>	ans=<span class="hljs-built_in">min</span>(ans,<span class="hljs-built_in">mst</span>(n+<span class="hljs-number">1</span>));<br><br>	e=a;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		e.<span class="hljs-built_in">push_back</span>(<span class="hljs-built_in">make_pair</span>(y[i],<span class="hljs-built_in">make_pair</span>(i,n+<span class="hljs-number">1</span>)));<br>	&#125;<br>	ans=<span class="hljs-built_in">min</span>(ans,<span class="hljs-built_in">mst</span>(n+<span class="hljs-number">1</span>));<br><br>	e=a;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		e.<span class="hljs-built_in">push_back</span>(<span class="hljs-built_in">make_pair</span>(x[i],<span class="hljs-built_in">make_pair</span>(i,n+<span class="hljs-number">1</span>)));<br>	&#125;<br>	<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>		e.<span class="hljs-built_in">push_back</span>(<span class="hljs-built_in">make_pair</span>(y[i],<span class="hljs-built_in">make_pair</span>(i,n+<span class="hljs-number">2</span>)));<br>	&#125;<br>	ans=<span class="hljs-built_in">min</span>(ans,<span class="hljs-built_in">mst</span>(n+<span class="hljs-number">2</span>));<br><br>	<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld\n&quot;</span>,ans);<br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
