<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>AtCoder Beginner Contest 267</title>
      <link href="/2022/09/03/abc267/"/>
      <url>/2022/09/03/abc267/</url>
      
        <content type="html"><![CDATA[<h2 id="NEC-Programming-Contest-2022-AtCoder-Beginner-Contest-267"><a href="#NEC-Programming-Contest-2022-AtCoder-Beginner-Contest-267" class="headerlink" title="NEC Programming Contest 2022 (AtCoder Beginner Contest 267)"></a><a href="https://atcoder.jp/contests/abc267">NEC Programming Contest 2022 (AtCoder Beginner Contest 267)</a></h2><h3 id="A-Saturday"><a href="#A-Saturday" class="headerlink" title="A - Saturday"></a><a href="https://atcoder.jp/contests/abc267/tasks/abc267_a">A - Saturday</a></h3><h4 id="题目翻译"><a href="#题目翻译" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入星期中的一天，输出还有几天到星期六</p><h4 id="题目思路"><a href="#题目思路" class="headerlink" title="题目思路"></a>题目思路</h4><p>直接用<code>map</code>模拟</p><h4 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br>map&lt;string,<span class="hljs-type">int</span>&gt; m;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>m[<span class="hljs-string">&quot;Monday&quot;</span>]=<span class="hljs-number">1</span>;<br>m[<span class="hljs-string">&quot;Tuesday&quot;</span>]=<span class="hljs-number">2</span>;<br>m[<span class="hljs-string">&quot;Wednesday&quot;</span>]=<span class="hljs-number">3</span>;<br>m[<span class="hljs-string">&quot;Thursday&quot;</span>]=<span class="hljs-number">4</span>;<br>m[<span class="hljs-string">&quot;Friday&quot;</span>]=<span class="hljs-number">5</span>;<br>string s;<br>cin&gt;&gt;s;<br>cout&lt;&lt;<span class="hljs-number">6</span>-m[s];<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="B-Split"><a href="#B-Split" class="headerlink" title="B - Split?"></a><a href="https://atcoder.jp/contests/abc267/tasks/abc267_b">B - Split?</a></h3><h4 id="题目翻译-1"><a href="#题目翻译-1" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入一个长度为<code>10</code>的<code>01</code>串,<code>0</code>表示倒了,<code>1</code>表示没倒,如果<code>1</code>倒了且没倒的列不连续,输出<code>Yes</code>,否则输出<code>No</code></p><h4 id="题目思路-1"><a href="#题目思路-1" class="headerlink" title="题目思路"></a>题目思路</h4><p>根据题意模拟</p><h4 id="AC代码-1"><a href="#AC代码-1" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">char</span> a[<span class="hljs-number">10</span>];<br><span class="hljs-type">int</span> c[<span class="hljs-number">10</span>]=&#123;<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>&#125;;<br><span class="hljs-type">int</span> b[<span class="hljs-number">7</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++)&#123;<br>cin&gt;&gt;a[i];<br><span class="hljs-keyword">if</span>(a[i]==<span class="hljs-string">&#x27;1&#x27;</span>) b[c[i]]++;<br>&#125;<br><span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;1&#x27;</span>)&#123;<br>cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-type">int</span> f=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">5</span>;i++)&#123;<br><span class="hljs-keyword">if</span>(b[i]==<span class="hljs-number">0</span>||b[i+<span class="hljs-number">1</span>]!=<span class="hljs-number">0</span>) <span class="hljs-keyword">continue</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">2</span>;j&lt;<span class="hljs-number">7</span>;j++)&#123;<br><span class="hljs-keyword">if</span>(b[j]!=<span class="hljs-number">0</span>)&#123;<br>f=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>(f) cout&lt;&lt;<span class="hljs-string">&quot;Yes&quot;</span>;<br><span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="C-Index-×-A-Continuous-ver"><a href="#C-Index-×-A-Continuous-ver" class="headerlink" title="C - Index × A(Continuous ver.)"></a><a href="https://atcoder.jp/contests/abc267/tasks/abc267_c">C - Index × A(Continuous ver.)</a></h3><h4 id="题目翻译-2"><a href="#题目翻译-2" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入一个长度为<code>n</code>的数组,找一个长度是<code>m</code>的子数组,使得$\sum\limits_{i&#x3D;1}^m{i*b_i}$最大</p><h4 id="题目思路-2"><a href="#题目思路-2" class="headerlink" title="题目思路"></a>题目思路</h4><p>数组$b_i&#x3D;\sum\limits_{j&#x3D;1}^i{a_j}$</p><p>数组$c_i&#x3D;\sum\limits_{j&#x3D;1}^i{a_j*j}$</p><p>对于每个$l,r$那么答案就为${c_l-c_{r}-l*(b_l-b_r)}$</p><h4 id="AC代码-2"><a href="#AC代码-2" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">200010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> b[<span class="hljs-number">200010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> c[<span class="hljs-number">200010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,m;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>cin&gt;&gt;a[i];<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>b[i]=b[i<span class="hljs-number">-1</span>]+a[i<span class="hljs-number">-1</span>];<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>c[i]=c[i<span class="hljs-number">-1</span>]+a[i<span class="hljs-number">-1</span>]*i;<br>&#125;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> z=<span class="hljs-number">-1e18</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=m;i&lt;=n;i++)&#123;<br>z=<span class="hljs-built_in">max</span>(z,c[i]-c[i-m]-(i-m)*(b[i]-b[i-m]));<br>&#125;<br>cout&lt;&lt;z;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="D-Index-×-A-Not-Continuous-ver"><a href="#D-Index-×-A-Not-Continuous-ver" class="headerlink" title="D - Index × A(Not Continuous ver.)"></a><a href="https://atcoder.jp/contests/abc267/tasks/abc267_d">D - Index × A(Not Continuous ver.)</a></h3><h4 id="题目翻译-3"><a href="#题目翻译-3" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入一个长度为<code>n</code>的数组,找一个长度是<code>m</code>的子序列,使得$\sum\limits_{i&#x3D;1}^m{i*b_i}$最大</p><h4 id="题目思路-3"><a href="#题目思路-3" class="headerlink" title="题目思路"></a>题目思路</h4><p>因为题目中<code>n</code>仅为<code>2000</code>,可以考虑$O(n^2)$的<code>dp</code>做法,用<code>f[i][j]</code>表示选到第<code>i</code>个数时共选了<code>j</code>个数,转移方程为$f_{ij}&#x3D;\max(f_{i-1j},f_{i-1j-1}+a_i\times j)$</p><h4 id="AC代码-3"><a href="#AC代码-3" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">2010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> f[<span class="hljs-number">2010</span>][<span class="hljs-number">2010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,m;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>cin&gt;&gt;a[i];<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=n;i++)&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;<br>f[i][j]=<span class="hljs-number">-1e18</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;<br>f[i][j]=<span class="hljs-built_in">max</span>(f[i<span class="hljs-number">-1</span>][j],f[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+a[i]*j);<br>&#125;<br>&#125;<br>cout&lt;&lt;f[n][m];<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>AtCoder Beginner Contest 263</title>
      <link href="/2022/08/06/abc263/"/>
      <url>/2022/08/06/abc263/</url>
      
        <content type="html"><![CDATA[<h2 id="LINE-Verda-Programming-Contest（AtCoder-Beginner-Contest-263）"><a href="#LINE-Verda-Programming-Contest（AtCoder-Beginner-Contest-263）" class="headerlink" title="LINE Verda Programming Contest（AtCoder Beginner Contest 263）"></a><a href="https://atcoder.jp/contests/abc263">LINE Verda Programming Contest（AtCoder Beginner Contest 263）</a></h2><h3 id="A-Full-House"><a href="#A-Full-House" class="headerlink" title="A - Full House"></a><a href="https://atcoder.jp/contests/abc263/tasks/abc263_a">A - Full House</a></h3><h4 id="题目翻译"><a href="#题目翻译" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入<code>5</code>个数字，问是不是<code>3</code>个相同且另外<code>2</code>个也相同</p><h4 id="题目思路"><a href="#题目思路" class="headerlink" title="题目思路"></a>题目思路</h4><p>排序之后判断</p><h4 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> a[<span class="hljs-number">10</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">5</span>;i++)&#123;<br>        cin&gt;&gt;a[i];<br>    &#125;<br>    <span class="hljs-built_in">sort</span>(a+<span class="hljs-number">1</span>,a+<span class="hljs-number">6</span>);<br>    <span class="hljs-type">int</span> z=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">1</span>]!=a[<span class="hljs-number">2</span>]) z=<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">2</span>]!=a[<span class="hljs-number">3</span>]&amp;&amp;a[<span class="hljs-number">3</span>]!=a[<span class="hljs-number">4</span>]) z=<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">4</span>]!=a[<span class="hljs-number">5</span>]) z=<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">if</span>(z==<span class="hljs-number">0</span>) cout&lt;&lt;<span class="hljs-string">&quot;Yes&quot;</span>;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="B-Ancestor"><a href="#B-Ancestor" class="headerlink" title="B - Ancestor"></a><a href="https://atcoder.jp/contests/abc263/tasks/abc263_b">B - Ancestor</a></h3><h4 id="题目翻译-1"><a href="#题目翻译-1" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入一个树<code>n</code>个点，点<code>i</code>的父亲节点是$p[i]$，保证$p[i]&lt;i$，<br>点<code>1</code>深度为<code>0</code>，问点<code>n</code>深度是多少？</p><h4 id="题目思路-1"><a href="#题目思路-1" class="headerlink" title="题目思路"></a>题目思路</h4><p>从第<code>n</code>个节点往上推即可</p><h4 id="AC代码-1"><a href="#AC代码-1" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> a[<span class="hljs-number">60</span>];<br><span class="hljs-type">int</span> f[<span class="hljs-number">60</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>        f[i]=a[i];<br>    &#125;<br>    <span class="hljs-type">int</span> x=n;<br>    <span class="hljs-type">int</span> s=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(;x!=<span class="hljs-number">1</span>;s++)&#123;<br>        x=f[x];<br>    &#125;<br>    cout&lt;&lt;s;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="C-Monotonically-Increasing"><a href="#C-Monotonically-Increasing" class="headerlink" title="C - Monotonically Increasing"></a><a href="https://atcoder.jp/contests/abc263/tasks/abc263_c">C - Monotonically Increasing</a></h3><h4 id="题目翻译-2"><a href="#题目翻译-2" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>从1到<code>m</code>中选<code>n</code>个数字，按字典序输出所有组合。</p><h4 id="题目思路-2"><a href="#题目思路-2" class="headerlink" title="题目思路"></a>题目思路</h4><p><code>dfs</code></p><h4 id="AC代码-2"><a href="#AC代码-2" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,m;<br><span class="hljs-type">int</span> a[<span class="hljs-number">20</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> l)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(x==n+<span class="hljs-number">1</span>)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            cout&lt;&lt;a[i]&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>;<br>        &#125;<br>        cout&lt;&lt;endl;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=l+<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;<br>        a[x]=i;<br>        <span class="hljs-built_in">solve</span>(x+<span class="hljs-number">1</span>,i);<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-built_in">solve</span>(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="D-Left-Right-Operation"><a href="#D-Left-Right-Operation" class="headerlink" title="D - Left Right Operation"></a><a href="https://atcoder.jp/contests/abc263/tasks/abc263_d">D - Left Right Operation</a></h3><h4 id="题目翻译-3"><a href="#题目翻译-3" class="headerlink" title="题目翻译"></a>题目翻译</h4><p>输入一个数组，把最左若干个数字改成<code>l</code>，把最右若干个数字改成<code>r</code>(可以不改),问最后数组的和最小是多少？</p><h4 id="题目思路-3"><a href="#题目思路-3" class="headerlink" title="题目思路"></a>题目思路</h4><p>求前缀和后dp即可(此题要<code>long long</code>)</p><h4 id="AC代码-3"><a href="#AC代码-3" class="headerlink" title="AC代码"></a>AC代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">200010</span>];<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> b[<span class="hljs-number">200010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> n,l,r;<br>    cin&gt;&gt;n&gt;&gt;l&gt;&gt;r;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        b[i]=b[i<span class="hljs-number">-1</span>]+a[i<span class="hljs-number">-1</span>];<br>    &#125;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> x[<span class="hljs-number">200010</span>];<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> z=<span class="hljs-number">1e18</span>;<br>    <span class="hljs-built_in">memset</span>(x,<span class="hljs-number">0x7f</span>,<span class="hljs-keyword">sizeof</span> x);<br>    x[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        x[i]=<span class="hljs-built_in">min</span>(x[i<span class="hljs-number">-1</span>],i*l-b[i]);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>,i=<span class="hljs-number">0</span>;j&lt;=n;j++,i++)&#123;<br>        z=<span class="hljs-built_in">min</span>(z,x[j]+(n-j)*r+b[j]);<br>    &#125;<br>    cout&lt;&lt;z;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Atcoder </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
